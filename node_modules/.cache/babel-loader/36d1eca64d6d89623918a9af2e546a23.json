{"ast":null,"code":"import _slicedToArray from\"/home/super/ToDo-React/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React from\"react\";// Función personalizada para manejar el almacenamiento local\nfunction useLocalStorage(itemName,initialValue){// Establece el estado inicial para el error, la carga y el valor del ítem\nvar _React$useState=React.useState(false),_React$useState2=_slicedToArray(_React$useState,2),error=_React$useState2[0],setError=_React$useState2[1];var _React$useState3=React.useState(true),_React$useState4=_slicedToArray(_React$useState3,2),loading=_React$useState4[0],setLoading=_React$useState4[1];var _React$useState5=React.useState(initialValue),_React$useState6=_slicedToArray(_React$useState5,2),item=_React$useState6[0],setItem=_React$useState6[1];// Este efecto se ejecuta al montar el componente y maneja la carga de datos desde localStorage\nReact.useEffect(function(){// Utiliza setTimeout para simular un retraso en la carga de datos\nsetTimeout(function(){try{// Intenta obtener el ítem del almacenamiento local\nvar localStorageItem=localStorage.getItem(itemName);var parsedItem;// Si no existe el ítem, crea uno con el valor inicial\nif(!localStorageItem){localStorage.setItem(itemName,JSON.stringify(initialValue));parsedItem=initialValue;}else{// Si el ítem existe, lo parsea y lo asigna a parsedItem\nparsedItem=JSON.parse(localStorageItem);}// Actualiza el estado del ítem con el valor de parsedItem y establece loading en falso\nsetItem(parsedItem);setLoading(false);}catch(error){// Si hay un error, actualiza el estado de error\nsetError(error);}},1000);});// Función para guardar un nuevo ítem en el almacenamiento local\nvar saveItem=function saveItem(newItem){try{// Convierte el nuevo ítem a una cadena JSON\nvar stringifiedItem=JSON.stringify(newItem);// Guarda el ítem en el almacenamiento local\nlocalStorage.setItem(itemName,stringifiedItem);// Actualiza el estado del ítem con el nuevo valor\nsetItem(newItem);}catch(error){// Si hay un error, actualiza el estado de error\nsetError(error);}};// Retorna el ítem, la función para guardar, y los estados de carga y error\nreturn{item:item,saveItem:saveItem,loading:loading,error:error};}export{useLocalStorage};","map":{"version":3,"names":["React","useLocalStorage","itemName","initialValue","useState","error","setError","loading","setLoading","item","setItem","useEffect","setTimeout","localStorageItem","localStorage","getItem","parsedItem","JSON","stringify","parse","saveItem","newItem","stringifiedItem"],"sources":["/home/super/ToDo-React/src/TodoContext/useLocalStorage.jsx"],"sourcesContent":["import React from \"react\";\n\n// Función personalizada para manejar el almacenamiento local\nfunction useLocalStorage(itemName, initialValue) {\n    // Establece el estado inicial para el error, la carga y el valor del ítem\n    const [error, setError] = React.useState(false);\n    const [loading, setLoading] = React.useState(true);\n    const [item, setItem] = React.useState(initialValue);\n\n    // Este efecto se ejecuta al montar el componente y maneja la carga de datos desde localStorage\n    React.useEffect(() => {\n        // Utiliza setTimeout para simular un retraso en la carga de datos\n        setTimeout(() => {\n            try {\n                // Intenta obtener el ítem del almacenamiento local\n                const localStorageItem = localStorage.getItem(itemName);\n                let parsedItem;\n\n                // Si no existe el ítem, crea uno con el valor inicial\n                if (!localStorageItem) {\n                    localStorage.setItem(itemName, JSON.stringify(initialValue));\n                    parsedItem = initialValue;\n                } else {\n                    // Si el ítem existe, lo parsea y lo asigna a parsedItem\n                    parsedItem = JSON.parse(localStorageItem);\n                }\n\n                // Actualiza el estado del ítem con el valor de parsedItem y establece loading en falso\n                setItem(parsedItem);\n                setLoading(false);\n            } catch (error) {\n                // Si hay un error, actualiza el estado de error\n                setError(error);\n            }\n        }, 1000);\n    });\n\n    // Función para guardar un nuevo ítem en el almacenamiento local\n    const saveItem = (newItem) => {\n        try {\n            // Convierte el nuevo ítem a una cadena JSON\n            const stringifiedItem = JSON.stringify(newItem);\n            // Guarda el ítem en el almacenamiento local\n            localStorage.setItem(itemName, stringifiedItem);\n            // Actualiza el estado del ítem con el nuevo valor\n            setItem(newItem);\n        } catch (error) {\n            // Si hay un error, actualiza el estado de error\n            setError(error);\n        }\n    };\n\n    // Retorna el ítem, la función para guardar, y los estados de carga y error\n    return {\n        item,\n        saveItem,\n        loading,\n        error,\n    };\n}\n\nexport { useLocalStorage };\n"],"mappings":"4GAAA,MAAOA,MAAP,KAAkB,OAAlB,CAEA;AACA,QAASC,gBAAT,CAAyBC,QAAzB,CAAmCC,YAAnC,CAAiD,CAC7C;AACA,oBAA0BH,KAAK,CAACI,QAAN,CAAe,KAAf,CAA1B,oDAAOC,KAAP,qBAAcC,QAAd,qBACA,qBAA8BN,KAAK,CAACI,QAAN,CAAe,IAAf,CAA9B,qDAAOG,OAAP,qBAAgBC,UAAhB,qBACA,qBAAwBR,KAAK,CAACI,QAAN,CAAeD,YAAf,CAAxB,qDAAOM,IAAP,qBAAaC,OAAb,qBAEA;AACAV,KAAK,CAACW,SAAN,CAAgB,UAAM,CAClB;AACAC,UAAU,CAAC,UAAM,CACb,GAAI,CACA;AACA,GAAMC,iBAAgB,CAAGC,YAAY,CAACC,OAAb,CAAqBb,QAArB,CAAzB,CACA,GAAIc,WAAJ,CAEA;AACA,GAAI,CAACH,gBAAL,CAAuB,CACnBC,YAAY,CAACJ,OAAb,CAAqBR,QAArB,CAA+Be,IAAI,CAACC,SAAL,CAAef,YAAf,CAA/B,EACAa,UAAU,CAAGb,YAAb,CACH,CAHD,IAGO,CACH;AACAa,UAAU,CAAGC,IAAI,CAACE,KAAL,CAAWN,gBAAX,CAAb,CACH,CAED;AACAH,OAAO,CAACM,UAAD,CAAP,CACAR,UAAU,CAAC,KAAD,CAAV,CACH,CAAC,MAAOH,KAAP,CAAc,CACZ;AACAC,QAAQ,CAACD,KAAD,CAAR,CACH,CACJ,CAtBS,CAsBP,IAtBO,CAAV,CAuBH,CAzBD,EA2BA;AACA,GAAMe,SAAQ,CAAG,QAAXA,SAAW,CAACC,OAAD,CAAa,CAC1B,GAAI,CACA;AACA,GAAMC,gBAAe,CAAGL,IAAI,CAACC,SAAL,CAAeG,OAAf,CAAxB,CACA;AACAP,YAAY,CAACJ,OAAb,CAAqBR,QAArB,CAA+BoB,eAA/B,EACA;AACAZ,OAAO,CAACW,OAAD,CAAP,CACH,CAAC,MAAOhB,KAAP,CAAc,CACZ;AACAC,QAAQ,CAACD,KAAD,CAAR,CACH,CACJ,CAZD,CAcA;AACA,MAAO,CACHI,IAAI,CAAJA,IADG,CAEHW,QAAQ,CAARA,QAFG,CAGHb,OAAO,CAAPA,OAHG,CAIHF,KAAK,CAALA,KAJG,CAAP,CAMH,CAED,OAASJ,eAAT"},"metadata":{},"sourceType":"module"}