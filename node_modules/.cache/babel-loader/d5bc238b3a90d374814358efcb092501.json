{"ast":null,"code":"var _jsxFileName = \"/home/super/CURSOS-PLATZI/intro_react/curso/src/TodoContext/TodoContext.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useLocalStorage } from \"./useLocalStorage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoContext = /*#__PURE__*/React.createContext();\n\nfunction TodoProvider(props) {\n  _s();\n\n  const {\n    item: todos,\n    saveItem: saveTodos,\n    loading,\n    error\n  } = useLocalStorage('TODOS_V1', []);\n  const [searchValue, setSearchValue] = React.useState(\"\");\n  const completedTodos = todos.filter(todo => todo.completed === true).length;\n  const totalTodos = todos.length;\n  let searchedTodos = []; // Guardaremos las coincidencias de busquedasd\n  //Logica para filtrar\n\n  if (searchValue.length <= 1) {\n    searchedTodos = todos;\n  } else {\n    searchedTodos = todos.filter(todo => {\n      const todoText = todo.text.toLowerCase();\n      const searchText = searchValue.toLocaleLowerCase();\n      return todoText.includes(searchText);\n    });\n  }\n\n  const completeTodo = text => {\n    const todoIndex = todos.findIndex(todo => todo.text === text);\n    const newTodos = [...todos];\n    newTodos[todoIndex].completed = true;\n    saveTodos(newTodos); //\n  };\n\n  const deleteTodo = text => {\n    const todoIndex = todos.findIndex(todo => todo.text === text);\n    const newTodos = [...todos];\n    newTodos.splice(todoIndex, 1);\n    saveTodos(newTodos);\n  };\n\n  return /*#__PURE__*/_jsxDEV(TodoContext.Provider, {\n    value: {\n      loading,\n      error,\n      totalTodos,\n      completedTodos,\n      searchValue,\n      setSearchValue,\n      searchedTodos,\n      completeTodo,\n      deleteTodo\n    },\n    children: [\" \", props.children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TodoProvider, \"LWfhX4thVWJgv62AQpo8KeM8C0o=\", false, function () {\n  return [useLocalStorage];\n});\n\n_c = TodoProvider;\nexport { TodoContext, TodoProvider };\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoProvider\");","map":{"version":3,"names":["React","useLocalStorage","TodoContext","createContext","TodoProvider","props","item","todos","saveItem","saveTodos","loading","error","searchValue","setSearchValue","useState","completedTodos","filter","todo","completed","length","totalTodos","searchedTodos","todoText","text","toLowerCase","searchText","toLocaleLowerCase","includes","completeTodo","todoIndex","findIndex","newTodos","deleteTodo","splice","children"],"sources":["/home/super/CURSOS-PLATZI/intro_react/curso/src/TodoContext/TodoContext.jsx"],"sourcesContent":["import React from \"react\";\nimport { useLocalStorage  } from \"./useLocalStorage\";\n\n\nconst TodoContext = React.createContext();\n\nfunction TodoProvider(props){\n    const {\n        item: todos,\n        saveItem: saveTodos,\n        loading,\n        error,\n    } = useLocalStorage('TODOS_V1', []);\n    const [searchValue, setSearchValue] = React.useState(\"\");\n\n    const completedTodos = todos.filter((todo) => todo.completed === true).length;\n    const totalTodos = todos.length;\n\n    let searchedTodos = []; // Guardaremos las coincidencias de busquedasd\n\n    //Logica para filtrar\n    if (searchValue.length <= 1) {\n        searchedTodos = todos;\n    } else {\n        searchedTodos = todos.filter((todo) => {\n            const todoText = todo.text.toLowerCase();\n            const searchText = searchValue.toLocaleLowerCase();\n            return todoText.includes(searchText);\n        });\n    }\n\n\n\n    const completeTodo = (text) => {\n        const todoIndex = todos.findIndex((todo) => todo.text === text);\n        const newTodos = [...todos];\n        newTodos[todoIndex].completed = true;\n        saveTodos(newTodos);\n        //\n    };\n\n    const deleteTodo = (text) => {\n        const todoIndex = todos.findIndex((todo) => todo.text === text);\n        const newTodos = [...todos];\n        newTodos.splice(todoIndex, 1);\n        saveTodos(newTodos);\n    };\n\n    return (\n        <TodoContext.Provider value={{\n            loading,\n            error,\n            totalTodos,\n            completedTodos,\n            searchValue,\n            setSearchValue,\n            searchedTodos,\n            completeTodo,\n            deleteTodo,        \n        }}> {props.children}\n        </TodoContext.Provider>\n    )\n}\n\nexport { TodoContext, TodoProvider}"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,QAAiC,mBAAjC;;AAGA,MAAMC,WAAW,gBAAGF,KAAK,CAACG,aAAN,EAApB;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA4B;EAAA;;EACxB,MAAM;IACFC,IAAI,EAAEC,KADJ;IAEFC,QAAQ,EAAEC,SAFR;IAGFC,OAHE;IAIFC;EAJE,IAKFV,eAAe,CAAC,UAAD,EAAa,EAAb,CALnB;EAMA,MAAM,CAACW,WAAD,EAAcC,cAAd,IAAgCb,KAAK,CAACc,QAAN,CAAe,EAAf,CAAtC;EAEA,MAAMC,cAAc,GAAGR,KAAK,CAACS,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACC,SAAL,KAAmB,IAA1C,EAAgDC,MAAvE;EACA,MAAMC,UAAU,GAAGb,KAAK,CAACY,MAAzB;EAEA,IAAIE,aAAa,GAAG,EAApB,CAZwB,CAYA;EAExB;;EACA,IAAIT,WAAW,CAACO,MAAZ,IAAsB,CAA1B,EAA6B;IACzBE,aAAa,GAAGd,KAAhB;EACH,CAFD,MAEO;IACHc,aAAa,GAAGd,KAAK,CAACS,MAAN,CAAcC,IAAD,IAAU;MACnC,MAAMK,QAAQ,GAAGL,IAAI,CAACM,IAAL,CAAUC,WAAV,EAAjB;MACA,MAAMC,UAAU,GAAGb,WAAW,CAACc,iBAAZ,EAAnB;MACA,OAAOJ,QAAQ,CAACK,QAAT,CAAkBF,UAAlB,CAAP;IACH,CAJe,CAAhB;EAKH;;EAID,MAAMG,YAAY,GAAIL,IAAD,IAAU;IAC3B,MAAMM,SAAS,GAAGtB,KAAK,CAACuB,SAAN,CAAiBb,IAAD,IAAUA,IAAI,CAACM,IAAL,KAAcA,IAAxC,CAAlB;IACA,MAAMQ,QAAQ,GAAG,CAAC,GAAGxB,KAAJ,CAAjB;IACAwB,QAAQ,CAACF,SAAD,CAAR,CAAoBX,SAApB,GAAgC,IAAhC;IACAT,SAAS,CAACsB,QAAD,CAAT,CAJ2B,CAK3B;EACH,CAND;;EAQA,MAAMC,UAAU,GAAIT,IAAD,IAAU;IACzB,MAAMM,SAAS,GAAGtB,KAAK,CAACuB,SAAN,CAAiBb,IAAD,IAAUA,IAAI,CAACM,IAAL,KAAcA,IAAxC,CAAlB;IACA,MAAMQ,QAAQ,GAAG,CAAC,GAAGxB,KAAJ,CAAjB;IACAwB,QAAQ,CAACE,MAAT,CAAgBJ,SAAhB,EAA2B,CAA3B;IACApB,SAAS,CAACsB,QAAD,CAAT;EACH,CALD;;EAOA,oBACI,QAAC,WAAD,CAAa,QAAb;IAAsB,KAAK,EAAE;MACzBrB,OADyB;MAEzBC,KAFyB;MAGzBS,UAHyB;MAIzBL,cAJyB;MAKzBH,WALyB;MAMzBC,cANyB;MAOzBQ,aAPyB;MAQzBO,YARyB;MASzBI;IATyB,CAA7B;IAAA,gBAUK3B,KAAK,CAAC6B,QAVX;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAcH;;GAxDQ9B,Y;UAMDH,e;;;KANCG,Y;AA0DT,SAASF,WAAT,EAAsBE,YAAtB"},"metadata":{},"sourceType":"module"}