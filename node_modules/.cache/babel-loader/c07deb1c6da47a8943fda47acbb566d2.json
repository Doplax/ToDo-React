{"ast":null,"code":"import _toConsumableArray from\"/home/super/ToDo-React/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"/home/super/ToDo-React/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React from\"react\";// Importa el hook personalizado useLocalStorage\nimport{useLocalStorage}from\"./useLocalStorage\";// Crea un contexto para los todos\nimport{jsx as _jsx}from\"react/jsx-runtime\";var TodoContext=/*#__PURE__*/React.createContext();function TodoProvider(props){// Utiliza el hook useLocalStorage para manejar el estado y las acciones de los todos\nvar _useLocalStorage=useLocalStorage(\"TODOS_V1\",[]),todos=_useLocalStorage.item,saveTodos=_useLocalStorage.saveItem,loading=_useLocalStorage.loading,error=_useLocalStorage.error;// Crea un estado para el valor de búsqueda\nvar _React$useState=React.useState(\"\"),_React$useState2=_slicedToArray(_React$useState,2),searchValue=_React$useState2[0],setSearchValue=_React$useState2[1];// Filtra los todos completados y obtiene su cantidad\nvar completedTodos=todos.filter(function(todo){return todo.completed===true;}).length;// Obtiene la cantidad total de todos\nvar totalTodos=todos.length;var searchedTodos=[];// Guardaremos las coincidencias de búsqueda\n// Lógica para filtrar los todos en función del valor de búsqueda\nif(searchValue.length<=1){searchedTodos=todos;}else{searchedTodos=todos.filter(function(todo){var todoText=todo.text.toLowerCase();var searchText=searchValue.toLocaleLowerCase();return todoText.includes(searchText);});}//Función para añadir un nuevo TODO\nvar addTodo=function addTodo(text){var newTodos=_toConsumableArray(todos);newTodos.push({completed:false,text:text});saveTodos(newTodos);};// Función para marcar un todo como completado\nvar completeTodo=function completeTodo(text){var todoIndex=todos.findIndex(function(todo){return todo.text===text;});var newTodos=_toConsumableArray(todos);newTodos[todoIndex].completed=true;saveTodos(newTodos);};// Función para eliminar un todo\nvar deleteTodo=function deleteTodo(text){var todoIndex=todos.findIndex(function(todo){return todo.text===text;});var newTodos=_toConsumableArray(todos);newTodos.splice(todoIndex,1);saveTodos(newTodos);};var _React$useState3=React.useState(false),_React$useState4=_slicedToArray(_React$useState3,2),openModal=_React$useState4[0],setOpenModal=_React$useState4[1];return/*#__PURE__*/_jsx(TodoContext.Provider,{value:{loading:loading,error:error,totalTodos:totalTodos,completedTodos:completedTodos,searchValue:searchValue,setSearchValue:setSearchValue,searchedTodos:searchedTodos,completeTodo:completeTodo,addTodo:addTodo,deleteTodo:deleteTodo,openModal:openModal,setOpenModal:setOpenModal},children:props.children});}export{TodoContext,TodoProvider};","map":{"version":3,"names":["React","useLocalStorage","TodoContext","createContext","TodoProvider","props","todos","item","saveTodos","saveItem","loading","error","useState","searchValue","setSearchValue","completedTodos","filter","todo","completed","length","totalTodos","searchedTodos","todoText","text","toLowerCase","searchText","toLocaleLowerCase","includes","addTodo","newTodos","push","completeTodo","todoIndex","findIndex","deleteTodo","splice","openModal","setOpenModal","children"],"sources":["/home/super/ToDo-React/src/TodoContext/TodoContext.jsx"],"sourcesContent":["import React from \"react\";\n// Importa el hook personalizado useLocalStorage\nimport { useLocalStorage } from \"./useLocalStorage\";\n\n// Crea un contexto para los todos\nconst TodoContext = React.createContext();\n\nfunction TodoProvider(props) {\n  // Utiliza el hook useLocalStorage para manejar el estado y las acciones de los todos\n  const {\n    item: todos,\n    saveItem: saveTodos,\n    loading,\n    error,\n  } = useLocalStorage(\"TODOS_V1\", []);\n\n  // Crea un estado para el valor de búsqueda\n  const [searchValue, setSearchValue] = React.useState(\"\");\n\n  // Filtra los todos completados y obtiene su cantidad\n  const completedTodos = todos.filter((todo) => todo.completed === true).length;\n\n  // Obtiene la cantidad total de todos\n  const totalTodos = todos.length;\n\n  let searchedTodos = []; // Guardaremos las coincidencias de búsqueda\n\n  // Lógica para filtrar los todos en función del valor de búsqueda\n  if (searchValue.length <= 1) {\n    searchedTodos = todos;\n  } else {\n    searchedTodos = todos.filter((todo) => {\n      const todoText = todo.text.toLowerCase();\n      const searchText = searchValue.toLocaleLowerCase();\n      return todoText.includes(searchText);\n    });\n  }\n\n  //Función para añadir un nuevo TODO\n  const addTodo = (text) => {\n    const newTodos = [...todos];\n    newTodos.push({\n      completed: false,\n      text,\n    })\n    saveTodos(newTodos)\n  }\n\n  // Función para marcar un todo como completado\n  const completeTodo = (text) => {\n    const todoIndex = todos.findIndex((todo) => todo.text === text);\n    const newTodos = [...todos];\n    newTodos[todoIndex].completed = true;\n    saveTodos(newTodos);\n  };\n\n  // Función para eliminar un todo\n  const deleteTodo = (text) => {\n    const todoIndex = todos.findIndex((todo) => todo.text === text);\n    const newTodos = [...todos];\n    newTodos.splice(todoIndex, 1);\n    saveTodos(newTodos);\n  };\n\n  const [openModal, setOpenModal] = React.useState(false);\n\n  return (\n    <TodoContext.Provider\n      value={{\n        loading,\n        error,\n        totalTodos,\n        completedTodos,\n        searchValue,\n        setSearchValue,\n        searchedTodos,\n        completeTodo,\n        addTodo,\n        deleteTodo,\n        openModal,\n        setOpenModal,\n      }}\n    >\n      {props.children}\n    </TodoContext.Provider>\n  );\n}\n\nexport { TodoContext, TodoProvider };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}