{"ast":null,"code":"var _jsxFileName = \"/home/super/CURSOS-PLATZI/intro_react/curso/src/TodoContext/TodoContext.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\"; // Importa el hook personalizado useLocalStorage\n\nimport { useLocalStorage } from \"./useLocalStorage\"; // Crea un contexto para los todos\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoContext = /*#__PURE__*/React.createContext();\n\nfunction TodoProvider(props) {\n  _s();\n\n  // Utiliza el hook useLocalStorage para manejar el estado y las acciones de los todos\n  const {\n    item: todos,\n    saveItem: saveTodos,\n    loading,\n    error\n  } = useLocalStorage(\"TODOS_V1\", []); // Crea un estado para el valor de búsqueda\n\n  const [searchValue, setSearchValue] = React.useState(\"\"); // Filtra los todos completados y obtiene su cantidad\n\n  const completedTodos = todos.filter(todo => todo.completed === true).length; // Obtiene la cantidad total de todos\n\n  const totalTodos = todos.length;\n  let searchedTodos = []; // Guardaremos las coincidencias de búsqueda\n  // Lógica para filtrar los todos en función del valor de búsqueda\n\n  if (searchValue.length <= 1) {\n    searchedTodos = todos;\n  } else {\n    searchedTodos = todos.filter(todo => {\n      const todoText = todo.text.toLowerCase();\n      const searchText = searchValue.toLocaleLowerCase();\n      return todoText.includes(searchText);\n    });\n  } //Función para añadir un nuevo TODO\n\n\n  const addTodo = text => {\n    const newTodos = [...todos];\n    newTodos.push({\n      completed: false,\n      text\n    });\n    saveTodos(newTodos);\n  }; // Función para marcar un todo como completado\n\n\n  const completeTodo = text => {\n    const todoIndex = todos.findIndex(todo => todo.text === text);\n    const newTodos = [...todos];\n    newTodos[todoIndex].completed = true;\n    saveTodos(newTodos);\n  }; // Función para eliminar un todo\n\n\n  const deleteTodo = text => {\n    const todoIndex = todos.findIndex(todo => todo.text === text);\n    const newTodos = [...todos];\n    newTodos.splice(todoIndex, 1);\n    saveTodos(newTodos);\n  };\n\n  const [openModal, setOpenModal] = React.useState(false);\n  return /*#__PURE__*/_jsxDEV(TodoContext.Provider, {\n    value: {\n      loading,\n      error,\n      totalTodos,\n      completedTodos,\n      searchValue,\n      setSearchValue,\n      searchedTodos,\n      completeTodo,\n      addTodo,\n      deleteTodo,\n      openModal,\n      setOpenModal\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TodoProvider, \"kfmEjh1M7XUWgh+uQKiGEjvOGu8=\", false, function () {\n  return [useLocalStorage];\n});\n\n_c = TodoProvider;\nexport { TodoContext, TodoProvider };\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoProvider\");","map":{"version":3,"names":["React","useLocalStorage","TodoContext","createContext","TodoProvider","props","item","todos","saveItem","saveTodos","loading","error","searchValue","setSearchValue","useState","completedTodos","filter","todo","completed","length","totalTodos","searchedTodos","todoText","text","toLowerCase","searchText","toLocaleLowerCase","includes","addTodo","newTodos","push","completeTodo","todoIndex","findIndex","deleteTodo","splice","openModal","setOpenModal","children"],"sources":["/home/super/CURSOS-PLATZI/intro_react/curso/src/TodoContext/TodoContext.jsx"],"sourcesContent":["import React from \"react\";\n// Importa el hook personalizado useLocalStorage\nimport { useLocalStorage } from \"./useLocalStorage\";\n\n// Crea un contexto para los todos\nconst TodoContext = React.createContext();\n\nfunction TodoProvider(props) {\n  // Utiliza el hook useLocalStorage para manejar el estado y las acciones de los todos\n  const {\n    item: todos,\n    saveItem: saveTodos,\n    loading,\n    error,\n  } = useLocalStorage(\"TODOS_V1\", []);\n\n  // Crea un estado para el valor de búsqueda\n  const [searchValue, setSearchValue] = React.useState(\"\");\n\n  // Filtra los todos completados y obtiene su cantidad\n  const completedTodos = todos.filter((todo) => todo.completed === true).length;\n\n  // Obtiene la cantidad total de todos\n  const totalTodos = todos.length;\n\n  let searchedTodos = []; // Guardaremos las coincidencias de búsqueda\n\n  // Lógica para filtrar los todos en función del valor de búsqueda\n  if (searchValue.length <= 1) {\n    searchedTodos = todos;\n  } else {\n    searchedTodos = todos.filter((todo) => {\n      const todoText = todo.text.toLowerCase();\n      const searchText = searchValue.toLocaleLowerCase();\n      return todoText.includes(searchText);\n    });\n  }\n\n  //Función para añadir un nuevo TODO\n  const addTodo = (text) => {\n    const newTodos = [...todos];\n    newTodos.push({\n      completed: false,\n      text,\n    })\n    saveTodos(newTodos)\n  }\n\n  // Función para marcar un todo como completado\n  const completeTodo = (text) => {\n    const todoIndex = todos.findIndex((todo) => todo.text === text);\n    const newTodos = [...todos];\n    newTodos[todoIndex].completed = true;\n    saveTodos(newTodos);\n  };\n\n  // Función para eliminar un todo\n  const deleteTodo = (text) => {\n    const todoIndex = todos.findIndex((todo) => todo.text === text);\n    const newTodos = [...todos];\n    newTodos.splice(todoIndex, 1);\n    saveTodos(newTodos);\n  };\n\n  const [openModal, setOpenModal] = React.useState(false);\n\n  return (\n    <TodoContext.Provider\n      value={{\n        loading,\n        error,\n        totalTodos,\n        completedTodos,\n        searchValue,\n        setSearchValue,\n        searchedTodos,\n        completeTodo,\n        addTodo,\n        deleteTodo,\n        openModal,\n        setOpenModal,\n      }}\n    >\n      {props.children}\n    </TodoContext.Provider>\n  );\n}\n\nexport { TodoContext, TodoProvider };\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAASC,eAAT,QAAgC,mBAAhC,C,CAEA;;;AACA,MAAMC,WAAW,gBAAGF,KAAK,CAACG,aAAN,EAApB;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;EAAA;;EAC3B;EACA,MAAM;IACJC,IAAI,EAAEC,KADF;IAEJC,QAAQ,EAAEC,SAFN;IAGJC,OAHI;IAIJC;EAJI,IAKFV,eAAe,CAAC,UAAD,EAAa,EAAb,CALnB,CAF2B,CAS3B;;EACA,MAAM,CAACW,WAAD,EAAcC,cAAd,IAAgCb,KAAK,CAACc,QAAN,CAAe,EAAf,CAAtC,CAV2B,CAY3B;;EACA,MAAMC,cAAc,GAAGR,KAAK,CAACS,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACC,SAAL,KAAmB,IAA1C,EAAgDC,MAAvE,CAb2B,CAe3B;;EACA,MAAMC,UAAU,GAAGb,KAAK,CAACY,MAAzB;EAEA,IAAIE,aAAa,GAAG,EAApB,CAlB2B,CAkBH;EAExB;;EACA,IAAIT,WAAW,CAACO,MAAZ,IAAsB,CAA1B,EAA6B;IAC3BE,aAAa,GAAGd,KAAhB;EACD,CAFD,MAEO;IACLc,aAAa,GAAGd,KAAK,CAACS,MAAN,CAAcC,IAAD,IAAU;MACrC,MAAMK,QAAQ,GAAGL,IAAI,CAACM,IAAL,CAAUC,WAAV,EAAjB;MACA,MAAMC,UAAU,GAAGb,WAAW,CAACc,iBAAZ,EAAnB;MACA,OAAOJ,QAAQ,CAACK,QAAT,CAAkBF,UAAlB,CAAP;IACD,CAJe,CAAhB;EAKD,CA7B0B,CA+B3B;;;EACA,MAAMG,OAAO,GAAIL,IAAD,IAAU;IACxB,MAAMM,QAAQ,GAAG,CAAC,GAAGtB,KAAJ,CAAjB;IACAsB,QAAQ,CAACC,IAAT,CAAc;MACZZ,SAAS,EAAE,KADC;MAEZK;IAFY,CAAd;IAIAd,SAAS,CAACoB,QAAD,CAAT;EACD,CAPD,CAhC2B,CAyC3B;;;EACA,MAAME,YAAY,GAAIR,IAAD,IAAU;IAC7B,MAAMS,SAAS,GAAGzB,KAAK,CAAC0B,SAAN,CAAiBhB,IAAD,IAAUA,IAAI,CAACM,IAAL,KAAcA,IAAxC,CAAlB;IACA,MAAMM,QAAQ,GAAG,CAAC,GAAGtB,KAAJ,CAAjB;IACAsB,QAAQ,CAACG,SAAD,CAAR,CAAoBd,SAApB,GAAgC,IAAhC;IACAT,SAAS,CAACoB,QAAD,CAAT;EACD,CALD,CA1C2B,CAiD3B;;;EACA,MAAMK,UAAU,GAAIX,IAAD,IAAU;IAC3B,MAAMS,SAAS,GAAGzB,KAAK,CAAC0B,SAAN,CAAiBhB,IAAD,IAAUA,IAAI,CAACM,IAAL,KAAcA,IAAxC,CAAlB;IACA,MAAMM,QAAQ,GAAG,CAAC,GAAGtB,KAAJ,CAAjB;IACAsB,QAAQ,CAACM,MAAT,CAAgBH,SAAhB,EAA2B,CAA3B;IACAvB,SAAS,CAACoB,QAAD,CAAT;EACD,CALD;;EAOA,MAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BrC,KAAK,CAACc,QAAN,CAAe,KAAf,CAAlC;EAEA,oBACE,QAAC,WAAD,CAAa,QAAb;IACE,KAAK,EAAE;MACLJ,OADK;MAELC,KAFK;MAGLS,UAHK;MAILL,cAJK;MAKLH,WALK;MAMLC,cANK;MAOLQ,aAPK;MAQLU,YARK;MASLH,OATK;MAULM,UAVK;MAWLE,SAXK;MAYLC;IAZK,CADT;IAAA,UAgBGhC,KAAK,CAACiC;EAhBT;IAAA;IAAA;IAAA;EAAA,QADF;AAoBD;;GA/EQlC,Y;UAOHH,e;;;KAPGG,Y;AAiFT,SAASF,WAAT,EAAsBE,YAAtB"},"metadata":{},"sourceType":"module"}