{"ast":null,"code":"var _jsxFileName = \"/home/super/CURSOS-PLATZI/intro_react/curso/src/App/App.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { AppUI } from \"./AppUI\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultTodos = [{\n  text: \"Cortar cebolla\",\n  completed: true\n}, {\n  text: \"Tomar curso\",\n  completed: false\n}, {\n  text: \"Llorar con la llorona\",\n  completed: true\n}, {\n  text: \"LALALALA\",\n  completed: false\n}];\n\nfunction App() {\n  _s();\n\n  const [todos, setTodos] = React.useState(defaultTodos);\n  const [searchValue, setSearchValue] = React.useState(\"\");\n  const completedTodos = todos.filter(todo => todo.completed === true).length;\n  const totalTodos = todos.length;\n  let searchedTodos = []; // Guardaremos las coincidencias de busquedasd\n  //Logica para filtrar\n\n  if (searchValue.length <= 1) {\n    searchedTodos = defaultTodos;\n  } else {\n    searchedTodos = todos.filter(todo => {\n      const todoText = todo.text.toLowerCase();\n      const searchText = searchValue.toLocaleLowerCase();\n      return todoText.includes(searchText);\n    });\n  }\n\n  const completeTodo = text => {\n    const todoIndex = todos.findIndex(todo => todo.text === text);\n    const newTodos = [...todos];\n    newTodos[todoIndex].completed = true;\n    setTodos(newTodos); //\n  };\n\n  const deleteTodo = text => {\n    const todoIndex = todos.findIndex(todo => todo.text === text);\n    const newTodos = [...todos];\n    newTodos.splice(todoIndex, 1);\n    setTodos(newTodos);\n  };\n\n  return /*#__PURE__*/_jsxDEV(AppUi, {\n    totalTodos: totalTodos,\n    completedTodos: completedTodos,\n    searchValue: searchValue,\n    setSearchValue: setSearchValue,\n    searchedTodos: searchedTodos,\n    completeTodo: completeTodo,\n    deleteTodo: deleteTodo\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"FlHChBAzK3wf9JOyrce0FyCNWzo=\");\n\n_c = App;\nexport { App };\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","AppUI","defaultTodos","text","completed","App","todos","setTodos","useState","searchValue","setSearchValue","completedTodos","filter","todo","length","totalTodos","searchedTodos","todoText","toLowerCase","searchText","toLocaleLowerCase","includes","completeTodo","todoIndex","findIndex","newTodos","deleteTodo","splice"],"sources":["/home/super/CURSOS-PLATZI/intro_react/curso/src/App/App.jsx"],"sourcesContent":["import React from \"react\";\nimport { AppUI } from \"./AppUI\";\n\nconst defaultTodos = [\n    { text: \"Cortar cebolla\", completed: true },\n    { text: \"Tomar curso\", completed: false },\n    { text: \"Llorar con la llorona\", completed: true },\n    { text: \"LALALALA\", completed: false },\n];\n\nfunction App() {\n    const [todos, setTodos] = React.useState(defaultTodos);\n    const [searchValue, setSearchValue] = React.useState(\"\");\n\n    const completedTodos = todos.filter((todo) => todo.completed === true).length;\n    const totalTodos = todos.length;\n\n    let searchedTodos = []; // Guardaremos las coincidencias de busquedasd\n\n    //Logica para filtrar\n    if (searchValue.length <= 1) {\n        searchedTodos = defaultTodos;\n    } else {\n        searchedTodos = todos.filter((todo) => {\n            const todoText = todo.text.toLowerCase();\n            const searchText = searchValue.toLocaleLowerCase();\n            return todoText.includes(searchText);\n        });\n    }\n\n    const completeTodo = (text) => {\n        const todoIndex = todos.findIndex((todo) => todo.text === text);\n        const newTodos = [...todos];\n        newTodos[todoIndex].completed = true;\n        setTodos(newTodos);\n        //\n    };\n\n    const deleteTodo = (text) => {\n        const todoIndex = todos.findIndex((todo) => todo.text === text);\n        const newTodos = [...todos];\n        newTodos.splice(todoIndex, 1);\n        setTodos(newTodos);\n    };\n\n    return (\n        <AppUi\n            totalTodos={totalTodos}\n            completedTodos={completedTodos}\n            searchValue={searchValue}\n            setSearchValue={setSearchValue}\n            searchedTodos={searchedTodos}\n            completeTodo={completeTodo}\n            deleteTodo={deleteTodo}\n        />\n    );\n}\n\nexport { App };\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,SAAtB;;AAEA,MAAMC,YAAY,GAAG,CACjB;EAAEC,IAAI,EAAE,gBAAR;EAA0BC,SAAS,EAAE;AAArC,CADiB,EAEjB;EAAED,IAAI,EAAE,aAAR;EAAuBC,SAAS,EAAE;AAAlC,CAFiB,EAGjB;EAAED,IAAI,EAAE,uBAAR;EAAiCC,SAAS,EAAE;AAA5C,CAHiB,EAIjB;EAAED,IAAI,EAAE,UAAR;EAAoBC,SAAS,EAAE;AAA/B,CAJiB,CAArB;;AAOA,SAASC,GAAT,GAAe;EAAA;;EACX,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,KAAK,CAACQ,QAAN,CAAeN,YAAf,CAA1B;EACA,MAAM,CAACO,WAAD,EAAcC,cAAd,IAAgCV,KAAK,CAACQ,QAAN,CAAe,EAAf,CAAtC;EAEA,MAAMG,cAAc,GAAGL,KAAK,CAACM,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACT,SAAL,KAAmB,IAA1C,EAAgDU,MAAvE;EACA,MAAMC,UAAU,GAAGT,KAAK,CAACQ,MAAzB;EAEA,IAAIE,aAAa,GAAG,EAApB,CAPW,CAOa;EAExB;;EACA,IAAIP,WAAW,CAACK,MAAZ,IAAsB,CAA1B,EAA6B;IACzBE,aAAa,GAAGd,YAAhB;EACH,CAFD,MAEO;IACHc,aAAa,GAAGV,KAAK,CAACM,MAAN,CAAcC,IAAD,IAAU;MACnC,MAAMI,QAAQ,GAAGJ,IAAI,CAACV,IAAL,CAAUe,WAAV,EAAjB;MACA,MAAMC,UAAU,GAAGV,WAAW,CAACW,iBAAZ,EAAnB;MACA,OAAOH,QAAQ,CAACI,QAAT,CAAkBF,UAAlB,CAAP;IACH,CAJe,CAAhB;EAKH;;EAED,MAAMG,YAAY,GAAInB,IAAD,IAAU;IAC3B,MAAMoB,SAAS,GAAGjB,KAAK,CAACkB,SAAN,CAAiBX,IAAD,IAAUA,IAAI,CAACV,IAAL,KAAcA,IAAxC,CAAlB;IACA,MAAMsB,QAAQ,GAAG,CAAC,GAAGnB,KAAJ,CAAjB;IACAmB,QAAQ,CAACF,SAAD,CAAR,CAAoBnB,SAApB,GAAgC,IAAhC;IACAG,QAAQ,CAACkB,QAAD,CAAR,CAJ2B,CAK3B;EACH,CAND;;EAQA,MAAMC,UAAU,GAAIvB,IAAD,IAAU;IACzB,MAAMoB,SAAS,GAAGjB,KAAK,CAACkB,SAAN,CAAiBX,IAAD,IAAUA,IAAI,CAACV,IAAL,KAAcA,IAAxC,CAAlB;IACA,MAAMsB,QAAQ,GAAG,CAAC,GAAGnB,KAAJ,CAAjB;IACAmB,QAAQ,CAACE,MAAT,CAAgBJ,SAAhB,EAA2B,CAA3B;IACAhB,QAAQ,CAACkB,QAAD,CAAR;EACH,CALD;;EAOA,oBACI,QAAC,KAAD;IACI,UAAU,EAAEV,UADhB;IAEI,cAAc,EAAEJ,cAFpB;IAGI,WAAW,EAAEF,WAHjB;IAII,cAAc,EAAEC,cAJpB;IAKI,aAAa,EAAEM,aALnB;IAMI,YAAY,EAAEM,YANlB;IAOI,UAAU,EAAEI;EAPhB;IAAA;IAAA;IAAA;EAAA,QADJ;AAWH;;GA9CQrB,G;;KAAAA,G;AAgDT,SAASA,GAAT"},"metadata":{},"sourceType":"module"}