{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from \"react\"; // Función personalizada para manejar el almacenamiento local\n\nfunction useLocalStorage(itemName, initialValue) {\n  _s();\n\n  // Establece el estado inicial para el error, la carga y el valor del ítem\n  const [error, setError] = React.useState(false);\n  const [loading, setLoading] = React.useState(true);\n  const [item, setItem] = React.useState(initialValue); // Este efecto se ejecuta al montar el componente y maneja la carga de datos desde localStorage\n\n  React.useEffect(() => {\n    // Utiliza setTimeout para simular un retraso en la carga de datos\n    setTimeout(() => {\n      try {\n        // Intenta obtener el ítem del almacenamiento local\n        const localStorageItem = localStorage.getItem(itemName);\n        let parsedItem; // Si no existe el ítem, crea uno con el valor inicial\n\n        if (!localStorageItem) {\n          localStorage.setItem(itemName, JSON.stringify(initialValue));\n          parsedItem = initialValue;\n        } else {\n          // Si el ítem existe, lo parsea y lo asigna a parsedItem\n          parsedItem = JSON.parse(localStorageItem);\n        } // Actualiza el estado del ítem con el valor de parsedItem y establece loading en falso\n\n\n        setItem(parsedItem);\n        setLoading(false);\n      } catch (error) {\n        // Si hay un error, actualiza el estado de error\n        setError(error);\n      }\n    }, 1000);\n  }); // Función para guardar un nuevo ítem en el almacenamiento local\n\n  const saveItem = newItem => {\n    try {\n      // Convierte el nuevo ítem a una cadena JSON\n      const stringifiedItem = JSON.stringify(newItem); // Guarda el ítem en el almacenamiento local\n\n      localStorage.setItem(itemName, stringifiedItem); // Actualiza el estado del ítem con el nuevo valor\n\n      setItem(newItem);\n    } catch (error) {\n      // Si hay un error, actualiza el estado de error\n      setError(error);\n    }\n  }; // Retorna el ítem, la función para guardar, y los estados de carga y error\n\n\n  return {\n    item,\n    saveItem,\n    loading,\n    error\n  };\n}\n\n_s(useLocalStorage, \"sd/jOzXoKWa10AnxNJGXHNbuvYQ=\");\n\nexport { useLocalStorage };","map":{"version":3,"names":["React","useLocalStorage","itemName","initialValue","error","setError","useState","loading","setLoading","item","setItem","useEffect","setTimeout","localStorageItem","localStorage","getItem","parsedItem","JSON","stringify","parse","saveItem","newItem","stringifiedItem"],"sources":["/home/super/ToDo-React/src/TodoContext/useLocalStorage.jsx"],"sourcesContent":["import React from \"react\";\n\n// Función personalizada para manejar el almacenamiento local\nfunction useLocalStorage(itemName, initialValue) {\n    // Establece el estado inicial para el error, la carga y el valor del ítem\n    const [error, setError] = React.useState(false);\n    const [loading, setLoading] = React.useState(true);\n    const [item, setItem] = React.useState(initialValue);\n\n    // Este efecto se ejecuta al montar el componente y maneja la carga de datos desde localStorage\n    React.useEffect(() => {\n        // Utiliza setTimeout para simular un retraso en la carga de datos\n        setTimeout(() => {\n            try {\n                // Intenta obtener el ítem del almacenamiento local\n                const localStorageItem = localStorage.getItem(itemName);\n                let parsedItem;\n\n                // Si no existe el ítem, crea uno con el valor inicial\n                if (!localStorageItem) {\n                    localStorage.setItem(itemName, JSON.stringify(initialValue));\n                    parsedItem = initialValue;\n                } else {\n                    // Si el ítem existe, lo parsea y lo asigna a parsedItem\n                    parsedItem = JSON.parse(localStorageItem);\n                }\n\n                // Actualiza el estado del ítem con el valor de parsedItem y establece loading en falso\n                setItem(parsedItem);\n                setLoading(false);\n            } catch (error) {\n                // Si hay un error, actualiza el estado de error\n                setError(error);\n            }\n        }, 1000);\n    });\n\n    // Función para guardar un nuevo ítem en el almacenamiento local\n    const saveItem = (newItem) => {\n        try {\n            // Convierte el nuevo ítem a una cadena JSON\n            const stringifiedItem = JSON.stringify(newItem);\n            // Guarda el ítem en el almacenamiento local\n            localStorage.setItem(itemName, stringifiedItem);\n            // Actualiza el estado del ítem con el nuevo valor\n            setItem(newItem);\n        } catch (error) {\n            // Si hay un error, actualiza el estado de error\n            setError(error);\n        }\n    };\n\n    // Retorna el ítem, la función para guardar, y los estados de carga y error\n    return {\n        item,\n        saveItem,\n        loading,\n        error,\n    };\n}\n\nexport { useLocalStorage };\n"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,SAASC,eAAT,CAAyBC,QAAzB,EAAmCC,YAAnC,EAAiD;EAAA;;EAC7C;EACA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,KAAK,CAACM,QAAN,CAAe,KAAf,CAA1B;EACA,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,KAAK,CAACM,QAAN,CAAe,IAAf,CAA9B;EACA,MAAM,CAACG,IAAD,EAAOC,OAAP,IAAkBV,KAAK,CAACM,QAAN,CAAeH,YAAf,CAAxB,CAJ6C,CAM7C;;EACAH,KAAK,CAACW,SAAN,CAAgB,MAAM;IAClB;IACAC,UAAU,CAAC,MAAM;MACb,IAAI;QACA;QACA,MAAMC,gBAAgB,GAAGC,YAAY,CAACC,OAAb,CAAqBb,QAArB,CAAzB;QACA,IAAIc,UAAJ,CAHA,CAKA;;QACA,IAAI,CAACH,gBAAL,EAAuB;UACnBC,YAAY,CAACJ,OAAb,CAAqBR,QAArB,EAA+Be,IAAI,CAACC,SAAL,CAAef,YAAf,CAA/B;UACAa,UAAU,GAAGb,YAAb;QACH,CAHD,MAGO;UACH;UACAa,UAAU,GAAGC,IAAI,CAACE,KAAL,CAAWN,gBAAX,CAAb;QACH,CAZD,CAcA;;;QACAH,OAAO,CAACM,UAAD,CAAP;QACAR,UAAU,CAAC,KAAD,CAAV;MACH,CAjBD,CAiBE,OAAOJ,KAAP,EAAc;QACZ;QACAC,QAAQ,CAACD,KAAD,CAAR;MACH;IACJ,CAtBS,EAsBP,IAtBO,CAAV;EAuBH,CAzBD,EAP6C,CAkC7C;;EACA,MAAMgB,QAAQ,GAAIC,OAAD,IAAa;IAC1B,IAAI;MACA;MACA,MAAMC,eAAe,GAAGL,IAAI,CAACC,SAAL,CAAeG,OAAf,CAAxB,CAFA,CAGA;;MACAP,YAAY,CAACJ,OAAb,CAAqBR,QAArB,EAA+BoB,eAA/B,EAJA,CAKA;;MACAZ,OAAO,CAACW,OAAD,CAAP;IACH,CAPD,CAOE,OAAOjB,KAAP,EAAc;MACZ;MACAC,QAAQ,CAACD,KAAD,CAAR;IACH;EACJ,CAZD,CAnC6C,CAiD7C;;;EACA,OAAO;IACHK,IADG;IAEHW,QAFG;IAGHb,OAHG;IAIHH;EAJG,CAAP;AAMH;;GAxDQH,e;;AA0DT,SAASA,eAAT"},"metadata":{},"sourceType":"module"}